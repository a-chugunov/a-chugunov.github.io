{"version":3,"sources":["components/Navigation.js","components/cv/Title.js","components/cv/Summary.js","components/cv/Work.js","components/cv/Education.js","components/cv/Skills.js","components/cv/CV.js","components/Home.js","components/NoPageFound.js","components/Routes.js","components/AppLayout.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","marginLeft","title","alignItems","myToolbar","justifyContent","Navigation","classes","trigger","useScrollTrigger","disableHysteresis","threshold","className","AppBar","elevation","color","Toolbar","Typography","variant","Button","component","RouterLink","to","target","href","Icon","Title","props","name","contacts","phone","email","id","Summary","summary","Work","work","workList","map","company","years","location","position","highlights","item","Education","education","edList","institution","degree","Skills","skills","skillList","category","skill","CV","useState","cvData","setCvData","useEffect","fetch","then","response","text","datastring","yamldata","yaml","loadAll","Home","NoPageFound","Routes","exact","path","AppLayout","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","App","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5dac436.chunk.js","sourcesContent":["/* eslint-disable  */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport { AppBar, Toolbar, Typography, Button, Icon, useScrollTrigger } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: theme.spacing(1),\n        marginLeft: theme.spacing(1)\n    },\n    title: {\n        alignItems: 'center'\n    },\n    myToolbar: {\n        justifyContent: 'space-between'\n    }\n}));\n\nconst Navigation = () => {\n    const classes = useStyles();\n\n    const trigger = useScrollTrigger({\n        disableHysteresis: true,\n        threshold: 0\n    });\n\n    return (\n        <div className={classes.root}>\n            <AppBar elevation={trigger ? 4 : 0} color={trigger ? 'default' : 'transparent'}>\n                <Toolbar className={classes.myToolbar}>\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n                        chugunov.dev\n                    </Typography>\n\n                    <div>\n                        <Button\n                            className={classes.menuButton}\n                            color=\"inherit\"\n                            component={RouterLink}\n                            to=\"/\"\n                        >\n                            Home\n                        </Button>\n\n                        <Button\n                            className={classes.menuButton}\n                            color=\"inherit\"\n                            component={RouterLink}\n                            to=\"/cv\"\n                        >\n                            CV\n                        </Button>\n                    </div>\n\n                    <div>\n                        <Button\n                            color=\"inherit\"\n                            target=\"_blank\"\n                            href=\"https://github.com/a-chugunov/\"\n                        >\n                            <Icon className=\"fab fa-github\" />\n                        </Button>\n                        <Button\n                            color=\"inherit\"\n                            target=\"_blank\"\n                            href=\"https://www.linkedin.com/in/alexeychugunov/\"\n                        >\n                            <Icon className=\"fab fa-linkedin-in\" />\n                        </Button>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            <Toolbar className={classes.myToolbar} />\n        </div>\n    );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Title = (props) => {\n    const { name, contacts: { phone, email } = {} } = props;\n\n    return (\n        <div id=\"contact-info\" className=\"vcard\">\n            <h1 className=\"fn\">{name}</h1>\n            <p>\n                Cell: <span className=\"tel\">{phone}</span>\n                <br />\n                Email:{' '}\n                <a className=\"email\" href={`mailto:${email}`}>\n                    {email}\n                </a>\n            </p>\n        </div>\n    );\n};\n\nTitle.propTypes = {\n    name: PropTypes.string.isRequired,\n    contacts: PropTypes.shape({\n        phone: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired\n    }).isRequired\n};\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Summary = (props) => {\n    const { summary } = props;\n    return (\n        <div id=\"objective\">\n            <p>{summary}</p>\n        </div>\n    );\n};\n\nSummary.propTypes = {\n    summary: PropTypes.string.isRequired\n};\n\nexport default Summary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Work = (props) => {\n    const { work = [] } = props;\n\n    const workList = work.map(({ company, years, location, position, summary, highlights }) => (\n        <dd key={company}>\n            <h2>\n                {company}\n                <span>{years}</span>\n            </h2>\n            <h2>\n                {position}\n                <span>{location}</span>\n            </h2>\n            <p>\n                {summary}\n                <br />\n                <ul>\n                    {highlights.map((item) => (\n                        <li key={item}>{item}</li>\n                    ))}\n                </ul>\n            </p>\n        </dd>\n    ));\n\n    return (\n        <div>\n            <dt>Experience</dt>\n            {workList}\n        </div>\n    );\n};\n\nexport default Work;\n\nWork.propTypes = {\n    work: PropTypes.arrayOf(\n        PropTypes.shape({\n            company: PropTypes.string.isRequired,\n            years: PropTypes.string.isRequired,\n            location: PropTypes.string.isRequired,\n            position: PropTypes.string.isRequired,\n            summary: PropTypes.string.isRequired,\n            highlights: PropTypes.string.isRequired\n        })\n    ).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Education = (props) => {\n    const { education = [] } = props;\n\n    const edList = education.map(({ institution, degree, years, highlights }) => (\n        <dd key={institution}>\n            <h2>\n                {institution}\n                <span>{years}</span>\n            </h2>\n            <p>\n                {degree}\n                <br />\n                {highlights}\n            </p>\n        </dd>\n    ));\n\n    return (\n        <div>\n            <dt>Education</dt>\n            {edList}\n        </div>\n    );\n};\n\nexport default Education;\n\nEducation.propTypes = {\n    education: PropTypes.arrayOf(\n        PropTypes.shape({\n            institution: PropTypes.string.isRequired,\n            degree: PropTypes.string.isRequired,\n            years: PropTypes.string.isRequired,\n            highlights: PropTypes.string.isRequired\n        })\n    ).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Skills = (props) => {\n    const { skills = [] } = props;\n\n    const skillList = skills.map(({ category, skill }) => (\n        <dd key={category}>\n            <h2>{category}</h2>\n            <p>\n                <ul>\n                    {skill.map((item) => (\n                        <li key={item}>{item}</li>\n                    ))}\n                </ul>\n            </p>\n        </dd>\n    ));\n\n    return (\n        <div>\n            <dt>Skills</dt>\n            {skillList}\n        </div>\n    );\n};\n\nexport default Skills;\n\nSkills.propTypes = {\n    skills: PropTypes.arrayOf(\n        PropTypes.shape({\n            category: PropTypes.string.isRequired,\n            skill: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired\n        })\n    ).isRequired\n};\n","import React, { useState, useEffect } from 'react';\nimport yaml from 'js-yaml';\n\nimport Title from './Title';\nimport Summary from './Summary';\nimport Work from './Work';\nimport Education from './Education';\nimport Skills from './Skills';\n\nimport './CV.css';\n\nconst CV = () => {\n    const [cvData, setCvData] = useState({});\n\n    useEffect(() => {\n        fetch('/data/CV.yaml')\n            .then((response) => response.text())\n            .then((datastring) => {\n                const yamldata = yaml.loadAll(datastring);\n                setCvData(yamldata[0]);\n            });\n    }, []);\n\n    return (\n        <div>\n            <div id=\"page-wrap\">\n                <div className=\"clear\" />\n                <Title name={cvData.name} contacts={cvData.contacts} />\n                <div className=\"clear\" />\n                <Summary summary={cvData.summary} />\n                <div className=\"clear\" />\n                <dl>\n                    <Work work={cvData.work} />\n                    <div className=\"clear\" />\n                    <Education education={cvData.education} />\n                    <div className=\"clear\" />\n                    <Skills skills={cvData.skills} />\n                    <div className=\"clear\" />\n                </dl>\n            </div>\n        </div>\n    );\n};\n\nexport default CV;\n","import React from 'react';\n\nimport CV from './cv/CV';\n\nconst Home = () => {\n    return <CV />;\n};\n\nexport default Home;\n","import React from 'react';\n\nconst NoPageFound = () => {\n    return (\n        <div>\n            <div> NoPageFound </div>\n        </div>\n    );\n};\n\nexport default NoPageFound;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport CV from './cv/CV';\nimport Home from './Home';\nimport NoPageFound from './NoPageFound';\n\nexport default function Routes() {\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/cv\" component={CV} />\n            <Route component={NoPageFound} />\n        </Switch>\n    );\n}\n","import React from 'react';\n\nimport Navigation from './Navigation';\nimport Routes from './Routes';\n\nconst AppLayout = () => {\n    return (\n        <div>\n            <Navigation />\n            <Routes />\n        </div>\n    );\n};\n\nexport default AppLayout;\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport './App.css';\r\n\r\nimport AppLayout from './components/AppLayout';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#757ce8',\r\n            main: '#3f50b5',\r\n            dark: '#002884',\r\n            contrastText: '#fff'\r\n        },\r\n        secondary: {\r\n            light: '#ff7961',\r\n            main: '#f44336',\r\n            dark: '#ba000d',\r\n            contrastText: '#000'\r\n        }\r\n    }\r\n});\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <CssBaseline />\r\n            <MuiThemeProvider theme={theme}>\r\n                <BrowserRouter>\r\n                    <AppLayout />\r\n                </BrowserRouter>\r\n            </MuiThemeProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}