{"version":3,"sources":["components/cv/Title.js","components/cv/Summary.js","components/cv/Work.js","components/cv/Education.js","components/cv/Skills.js","components/cv/CV.js","components/AppLayout.js","App.js","reportWebVitals.js","index.js"],"names":["Title","props","name","contacts","phone","email","id","className","href","Summary","summary","Work","work","workList","map","company","years","location","position","highlights","item","Education","education","edList","institution","degree","Skills","skills","skillList","category","skill","CV","useState","cvData","setCvData","useEffect","fetch","then","response","text","datastring","yamldata","yaml","loadAll","AppLayout","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSA6BeA,EA1BD,SAACC,GAAW,IACdC,EAA0CD,EAA1CC,KADa,EAC6BD,EAApCE,SAAYC,GADL,aACsB,GADtB,GACKA,MAAOC,EADZ,EACYA,MAEjC,OACI,sBAAKC,GAAG,eAAeC,UAAU,QAAjC,UACI,oBAAIA,UAAU,KAAd,SAAoBL,IACpB,uCACU,sBAAMK,UAAU,MAAhB,SAAuBH,IAC7B,uBAFJ,SAGW,IACP,mBAAGG,UAAU,QAAQC,KAAI,iBAAYH,GAArC,SACKA,WCENI,EAbC,SAACR,GAAW,IAChBS,EAAYT,EAAZS,QACR,OACI,qBAAKJ,GAAG,YAAR,SACI,4BAAII,OC4BDC,EAhCF,SAACV,GAAW,IAAD,EACEA,EAAdW,KAEFC,QAHc,MACL,GADK,GAGEC,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,SAAUR,EAAvC,EAAuCA,QAASS,EAAhD,EAAgDA,WAAhD,OACtB,+BACI,+BACKJ,EACD,iCACKE,EADL,+BACyDD,QAG7D,6BAAKE,IACL,8BACKR,EACD,uBACA,6BACKS,EAAWL,KAAI,SAACM,GAAD,OACZ,6BAAgBA,GAAPA,aAbhBL,MAoBb,OACI,gCACI,4CACCF,MCHEQ,EAxBG,SAACpB,GAAW,IAAD,EACEA,EAAnBqB,UAEFC,QAHmB,MACL,GADK,GAGAT,KAAI,gBAAGU,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,OAAQT,EAAxB,EAAwBA,MAAOG,EAA/B,EAA+BA,WAA/B,OACzB,+BACI,+BACKK,EADL,MACqBR,KAErB,8BACKS,EACD,uBACCN,OAPAK,MAYb,OACI,gCACI,2CACCD,MCKEG,EAxBA,SAACzB,GAAW,IAAD,EACEA,EAAhB0B,OAEFC,QAHgB,MACL,GADK,GAGGd,KAAI,gBAAGe,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAb,OACzB,+BACI,6BAAKD,IACL,4BACI,6BACKC,EAAMhB,KAAI,SAACM,GAAD,OACP,6BAAgBA,GAAPA,YALhBS,MAYb,OACI,gCACI,wCACCD,MCkBEG,EA/BJ,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,KAYb,OATAC,qBAAU,WACNC,MAAM,iBACDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACH,IAAMC,EAAWC,IAAKC,QAAQH,GAC9BN,EAAUO,EAAS,SAE5B,IAGC,sBAAKnC,GAAG,YAAR,UACI,qBAAKC,UAAU,UACf,cAAC,EAAD,CAAOL,KAAM+B,EAAO/B,KAAMC,SAAU8B,EAAO9B,WAC3C,qBAAKI,UAAU,UACf,cAAC,EAAD,CAASG,QAASuB,EAAOvB,UACzB,qBAAKH,UAAU,UACf,+BACI,cAAC,EAAD,CAAMK,KAAMqB,EAAOrB,OACnB,qBAAKL,UAAU,UACf,cAAC,EAAD,CAAWe,UAAWW,EAAOX,YAC7B,qBAAKf,UAAU,UACf,cAAC,EAAD,CAAQoB,OAAQM,EAAON,SACvB,qBAAKpB,UAAU,iBCrBhBqC,EARG,WACd,OACI,8BACI,cAAC,EAAD,OCSGC,MAVf,WACI,OACI,qBAAKtC,UAAU,MAAf,SACI,cAAC,IAAD,UACI,cAAC,EAAD,SCCDuC,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDpBO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.03ad5e29.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Title = (props) => {\n    const { name, contacts: { phone, email } = {} } = props;\n\n    return (\n        <div id=\"contact-info\" className=\"vcard\">\n            <h1 className=\"fn\">{name}</h1>\n            <p>\n                Cell: <span className=\"tel\">{phone}</span>\n                <br />\n                Email:{' '}\n                <a className=\"email\" href={`mailto:${email}`}>\n                    {email}\n                </a>\n            </p>\n        </div>\n    );\n};\n\nTitle.propTypes = {\n    name: PropTypes.string.isRequired,\n    contacts: PropTypes.shape({\n        phone: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired\n    }).isRequired\n};\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Summary = (props) => {\n    const { summary } = props;\n    return (\n        <div id=\"objective\">\n            <p>{summary}</p>\n        </div>\n    );\n};\n\nSummary.propTypes = {\n    summary: PropTypes.string.isRequired\n};\n\nexport default Summary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Work = (props) => {\n    const { work = [] } = props;\n\n    const workList = work.map(({ company, years, location, position, summary, highlights }) => (\n        <dd key={company}>\n            <h2>\n                {company}\n                <span>\n                    {location}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{years}\n                </span>\n            </h2>\n            <h3>{position}</h3>\n            <p>\n                {summary}\n                <br />\n                <ul>\n                    {highlights.map((item) => (\n                        <li key={item}>{item}</li>\n                    ))}\n                </ul>\n            </p>\n        </dd>\n    ));\n\n    return (\n        <div>\n            <dt>Experience</dt>\n            {workList}\n        </div>\n    );\n};\n\nexport default Work;\n\nWork.propTypes = {\n    work: PropTypes.arrayOf(\n        PropTypes.shape({\n            company: PropTypes.string.isRequired,\n            years: PropTypes.string.isRequired,\n            location: PropTypes.string.isRequired,\n            position: PropTypes.string.isRequired,\n            summary: PropTypes.string.isRequired,\n            highlights: PropTypes.string.isRequired\n        })\n    ).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Education = (props) => {\n    const { education = [] } = props;\n\n    const edList = education.map(({ institution, degree, years, highlights }) => (\n        <dd key={institution}>\n            <h2>\n                {institution} - {years}\n            </h2>\n            <p>\n                {degree}\n                <br />\n                {highlights}\n            </p>\n        </dd>\n    ));\n\n    return (\n        <div>\n            <dt>Education</dt>\n            {edList}\n        </div>\n    );\n};\n\nexport default Education;\n\nEducation.propTypes = {\n    education: PropTypes.arrayOf(\n        PropTypes.shape({\n            institution: PropTypes.string.isRequired,\n            degree: PropTypes.string.isRequired,\n            years: PropTypes.string.isRequired,\n            highlights: PropTypes.string.isRequired\n        })\n    ).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Skills = (props) => {\n    const { skills = [] } = props;\n\n    const skillList = skills.map(({ category, skill }) => (\n        <dd key={category}>\n            <h2>{category}</h2>\n            <p>\n                <ul>\n                    {skill.map((item) => (\n                        <li key={item}>{item}</li>\n                    ))}\n                </ul>\n            </p>\n        </dd>\n    ));\n\n    return (\n        <div>\n            <dt>Skills</dt>\n            {skillList}\n        </div>\n    );\n};\n\nexport default Skills;\n\nSkills.propTypes = {\n    skills: PropTypes.arrayOf(\n        PropTypes.shape({\n            category: PropTypes.string.isRequired,\n            skill: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired\n        })\n    ).isRequired\n};\n","import React, { useState, useEffect } from 'react';\nimport yaml from 'js-yaml';\n\nimport Title from './Title';\nimport Summary from './Summary';\nimport Work from './Work';\nimport Education from './Education';\nimport Skills from './Skills';\n\nconst CV = () => {\n    const [cvData, setCvData] = useState({});\n\n    useEffect(() => {\n        fetch('/data/CV.yaml')\n            .then((response) => response.text())\n            .then((datastring) => {\n                const yamldata = yaml.loadAll(datastring);\n                setCvData(yamldata[0]);\n            });\n    }, []);\n\n    return (\n        <div id=\"page-wrap\">\n            <div className=\"clear\" />\n            <Title name={cvData.name} contacts={cvData.contacts} />\n            <div className=\"clear\" />\n            <Summary summary={cvData.summary} />\n            <div className=\"clear\" />\n            <dl>\n                <Work work={cvData.work} />\n                <div className=\"clear\" />\n                <Education education={cvData.education} />\n                <div className=\"clear\" />\n                <Skills skills={cvData.skills} />\n                <div className=\"clear\" />\n            </dl>\n        </div>\n    );\n};\n\nexport default CV;\n","import React from 'react';\n\nimport './AppLayout.css';\nimport CV from './cv/CV';\n\nconst AppLayout = () => {\n    return (\n        <div>\n            <CV />\n        </div>\n    );\n};\n\nexport default AppLayout;\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './App.css';\r\n\r\nimport AppLayout from './components/AppLayout';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <BrowserRouter>\r\n                <AppLayout />\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}